
data lda.acu2;
set lda.aculda2;
drop severity;
ltime= log(time + 1);
timeclass=time;
if frequency=0 then frequency=".";
run;



/* GENERALIZED LINEAR MIXED MODELS */

/* saturated GLMM*/
proc glimmix data=lda.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept  / type=un subject=id;
run;
/* -2LL=6443.01 df=8   */

/* include random slopes */
proc glimmix data=lda.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;
/* -2LL=6397.73 df=10 p<0.0001  df=10 p<0.0001 random slopes ok */

/* reduce mean structure, remove age*time */
proc glimmix data=lda.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;
/* -2LL=6399.17 df=9 p=0.2301 */

/* ok, remove chronicity and his interaction */
proc glimmix data=lda.acu2 method=quad(qpoints=30);
class id;
model frequency = age time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;
/* -2LL=6406.73 df=7 p=0.022 */



/* Reducing mean structure PART 2 */


/* full model with random slopes */
proc glimmix data=lda2.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type= un  subject=id;
run;
/* -2LL=6397.73 df=10 p<0.0001  df=10 p<0.0001 random slopes ok */

/* reduce mean structure, remove  chronicity*time */
proc glimmix data=lda2.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time age*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;
/* -2LL=6399.17 df=9 p=0.2301 */

/* ok, age * time is significant hence cant remove age as well. But remove chronicity*/
proc glimmix data=lda2.acu2 method=quad(qpoints=30);
class id;
model frequency = age time age*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;
/* -2LL=6402.18 df=8 p=0.022 */

/*Final Reduced mean structure for Quadrature loglinear Poisson Mixed Model */













/* Comparing methods- MQL,PQL (both using ML and REML estimators),Laplace and Gaussian with model with full covariates */

/* MQL REML */
proc glimmix data=lda2.acu2 method=rmpl;
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;


/* PQL REML */
proc glimmix data=lda2.acu2 method=rspl;
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;


/* MQL ML */
proc glimmix data=lda2.acu2 method=mmpl;
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;


/* PQL ML */
proc glimmix data=lda2.acu2 method=mspl;
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;




/* Laplace approximation to integrals */
proc glimmix data=lda2.acu2 method=quad(qpoints=1);
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept  / type=un subject=id;
run;


/* Gauss Quad */
proc glimmix data=lda2.acu2 method=quad(qpoints=30);
class id;
model frequency = age chronicity time age*time chronicity*time group*time
/ dist=poisson solution;
random intercept time  / type=un subject=id;
run;


