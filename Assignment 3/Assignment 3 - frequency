libname LDA 'H:\';

data lda.acu2;
set lda.aculda2;
timeclass=time;
if frequency=0 then frequency=".";
run;


/********************************************/
/* Exploration of missing data mechanisms.*/
/********************************************/

/* Long to wide format*/
proc sort data=lda.acu2;
by id age chronicity group;
run;

/* Transpose frequency */
proc transpose data=lda.acu2 out=horiz_frequency prefix=frequency;
by id  age chronicity group ;
id time;
var frequency;
run;

/* Transpose severity */
proc transpose data=lda.acu2 out=horiz_severity prefix=severity;
by id ;
id time;
var severity;
run;

/* Merging */
proc sort data=horiz_frequency;
by id;
run;
proc sort data=horiz_frequency;
by id;
run;

data horiz;
merge horiz_frequency horiz_severity;
by id;
drop _NAME_;
logfr0=log(frequency0);
logfr3=log(frequency3);
logfr12=log(frequency12);
run;

/*Overview of missigness table*/
proc mi data=horiz  simple nimpute=0;
em ;
var frequency3 frequency12 ;
run;

/* slightly different dropouts from severity's */
proc mi data=horiz simple nimpute=0 ;
var  age chronicity frequency0 frequency3 frequency12 severity0 severity3 severity12;
run;

/*Overview of missigness table per group*/
proc sort data=horiz;
by group;
run;

proc mi data=horiz simple nimpute=0;
em itprint outem=growthem1;
var frequency3 frequency12;
by group;
run;



/********************************************/
/* COMPLETE CASE ANALYSIS - GEE */
/********************************************/

proc genmod data=lda.acu2 ;
class id timeclass;
model frequency = severity age chronicity time severity*time age*time chronicity*time group*time / type3 dist=poisson ;
repeated subject=id / withinsubject=timeclass type=ind   modelse; run;



/********************************************/
/*Multiple imputation */
/********************************************/

proc mi data=horiz seed=486048 simple out=imp_wide nimpute=20 round=0.01;
fcs reg(severity0=age chronicity); 
fcs reg(severity3=age chronicity severity0); 
fcs reg(severity12=age chronicity severity0 severity3); 
fcs reg(logfr0= age chronicity severity0 severity3 severity12); 
fcs reg(logfr3= age chronicity severity0 severity3 severity12 logfr0); 
fcs reg(logfr12= age chronicity severity0 severity3 severity12 logfr0 logfr3); 
var age chronicity severity0 severity3 severity12 logfr0 logfr3 logfr12 ;
by group;
run;



/*wide to long*/
data imp_long;
set imp_wide;
array f (3) logfr0 logfr3 logfr12;
array s (3) severity0 severity3 severity12;
do j=1 to 3;
lfrequency=f(j);
severity=s(j);
time=j+20;
output;
end;
run;


data lda.acuimp;
set imp_long;
drop frequency0 frequency3 frequency12 severity0 severity3 severity12 logfr0 logfr3 logfr12 j;
if time eq 21 then time=0;
if time eq 22 then time=3;
if time eq 23 then time=12;
timeclass=time;
frequency=exp(lfrequency);
run;

proc sort data=lda.acuimp;
by _Imputation_;
run;



/********************************************/
/* MAR - Multiple Imputation GEE */
/********************************************/

proc genmod data=lda.acuimp descending;
class id timeclass;
model frequency = severity age chronicity time severity*time age*time chronicity*time group*time / covb dist=poisson ;
repeated subject=id / withinsubject=timeclass type=ind  covb modelse;
by _imputation_;
ods output GEEEmpPEst=geeparms parminfo=geepinfo CovB=geecovb;
run;

proc mianalyze parms=geeparms covb=geecovb parminfo=geepinfo wcov bcov tcov;
modeleffects intercept severity age chronicity time severity*time age*time chronicity*time group*time;
run;

/********************************************/
/* MAR - Multiple Imputation for non monotone missingness - WGEE */
/********************************************/


/********************************************/
/* MAR - Multiple Imputation for non monotone missingness - WGEE */
/********************************************/

data horiz;
set horiz;
dimmi=0;
if logfr3 eq "." and logfr12 ne "." then dimmi=1;
run;


proc mi data=horiz seed=486048 simple out=imp_wide1 nimpute=20 round=0.01;
fcs reg(severity0=age chronicity); 
fcs reg(severity3=age chronicity severity0); 
fcs reg(severity12=age chronicity severity0 severity3); 
fcs reg(logfr0= age chronicity severity0 severity3 severity12); 
fcs reg(logfr3= age chronicity severity0 severity3 severity12 logfr0); 
var age chronicity severity0 severity3 severity12 logfr0 logfr3 logfr12 ;
by group;
run;

data imp_step;
set imp_wide1 ;
where dimmi=1;
dimmi=0;
run;

proc sort data= imp_step;
by _imputation_;
proc sort data= imp_wide1;
by _imputation_;


data imp_final;
merge imp_step imp_wide1;
by _imputation_;
where dimmi=0;
run;

/* Checking monotone missingness */
proc mi data=imp_final simple nimpute=0 ;
var  age chronicity frequency0 frequency3 frequency12 severity0 severity3 severity12;
run;



/*wide to long*/
data imp_long1;
set imp_final;
array f (3) frequency0 frequency3 frequency12;
array s (3) severity0 severity3 severity12;
do j=1 to 3;
frequency=f(j);
severity=s(j);
time=j+20;
output;
end;
run;


data lda.acuimp1;
set imp_long1;
drop frequency0 frequency3 frequency12 severity0 severity3 severity12 logfr0 logfr3 logfr12 j;
if time eq 21 then time=0;
if time eq 22 then time=3;
if time eq 23 then time=12;
timeclass=time;
run;

proc sort data=lda.acuimp1;
by _Imputation_;
run;



/*macro for creating variables "dropout" and "prev" */
%macro dropout(data=,id=,time=,response=,out=);
%if %bquote(&data)= %then %let data=&syslast;
proc freq data=&data noprint;
tables &id /out=freqid;
tables &time / out=freqtime;
run;
proc iml;
reset noprint;
use freqid;
read all var {&id};
nsub = nrow(&id);
use freqtime;
read all var {&time};
ntime = nrow(&time);
time = &time;
use &data;
read all var {&id &time &response};
n = nrow(&response);
dropout = j(n,1,0);
ind = 1;
do while (ind <= nsub);
j=1;
if (&response[(ind-1)*ntime+j]=.) then print "First Measurement is Missing";
if (&response[(ind-1)*ntime+j]^=.) then
do;
j = ntime;
do until (j=1);
if (&response[(ind-1)*ntime+j]=.) then
do;
dropout[(ind-1)*ntime+j]=1;
j = j-1;
end;
else j = 1;
end;
end;
ind = ind+1;
end;
prev = j(n,1,1);
prev[2:n] = &response[1:n-1];
i=1;
do while (i<=n);
if &time[i]=time[1] then prev[i]=.;
i = i+1;
end;
create help var {&id &time &response dropout prev};
append;
quit;
data &out;
merge &data help;
run;
%mend;

%dropout(data=lda.acuimp1,id=id,time=time,response=frequency,out=lda.acuimp2);

proc gee data=lda.acuimp2;
by _imputation_;
class id  timeclass;
model frequency = severity age chronicity time severity*time age*time chronicity*time group*time/ dist=poisson;
repeated subject=id /within=timeclass corr=un ecovb;
missmodel prev severity age chronicity group /type=obslevel;
ods output GEEEmpPEst=wgeeparms parminfo=wgeepinfo modelinfo=wgeemodelinfo GEERCov=wgeecovb;
run;

proc mianalyze parms=wgeeparms covb=wgeecovb parminfo=wgeepinfo wcov bcov tcov;
modeleffects  intercept severity age chronicity time severity*time age*time chronicity*time group*time;
run;

proc genmod data=lda.acuimp2 ;
class group;
model dropout = prev group  age chronicity / pred dist=b;
run;
